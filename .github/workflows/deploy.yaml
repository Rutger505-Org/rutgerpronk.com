name: Deploy

on:
  push:
    tags:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build-docker-image:
    name: Build Docker image
    runs-on: ubuntu-latest

    steps:
      - name: Define tag name
        run: |
          if [[ ${{ github.ref }} == 'refs/tags/'* ]]; then
            TAG_NAME=${{ github.ref_name }}
            echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          else
            TAG_NAME=${{ github.sha }}
            echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          fi
          echo "Setting TAG_NAME to $TAG_NAME"

      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: rutger505/tic-tac-toe-frontend:${{ env.TAG_NAME }}

  deploy-to-kubernetes:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    #    needs:
    #      - build-docker-image

    env:
      ENVIRONMENT: ${{ vars.ENVIRONMENT }}
      NAMESPACE: portfolio-${{ vars.ENVIRONMENT }}

    steps:
      - name: Define tag name
        run: |
          if [[ ${{ github.ref }} == 'refs/tags/'* ]]; then
            TAG_NAME=${{ github.ref_name }}
            echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          else
            TAG_NAME=${{ github.sha }}
            echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          fi
          echo "Setting TAG_NAME to $TAG_NAME"

      - name: Define environment
        run: |
          if [[ ${{ github.ref }} == 'refs/tags/'* ]]; then
            ENVIRONMENT=production
            echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV
          else
            ENVIRONMENT=pull-request-${{ github.event.pull_request.number }}
            echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV
          fi
          echo "Setting ENVIRONMENT to $ENVIRONMENT"

      - uses: actions/checkout@v4

      - name: Install envsubst
        run: sudo apt-get update && sudo apt-get install -y gettext-base

      - uses: azure/setup-kubectl@v4
        with:
          version: 'v1.31.0'

      - name: Kubernetes Set Context
        uses: Azure/k8s-set-context@v4.0.1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Insert environment variables into Kubernetes files
        run: |
          FILES=$(ls k8s/*.yaml | tr '\n' ' ')
          
          for FILE in $FILES; do
            echo "Processing $FILE"
          
            envsubst < $FILE > /tmp/envsubst || exit 1
          
            mv /tmp/envsubst $FILE || exit 1
          done
        env:
          TAG_NAME: ${{ env.TAG_NAME }}
          INGRESS_HOST: ${{ vars.INGRESS_HOST }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}

      - name: Create namespace if not exists
        run: |
          if ! kubectl get namespace $NAMESPACE &> /dev/null; then
            echo "Namespace $NAMESPACE does not exist, creating it"
            kubectl create namespace $NAMESPACE
          else
            echo "Namespace $NAMESPACE already exists"
          fi

      - name: Deploy to Kubernetes
        uses: Azure/k8s-deploy@v5
        with:
          namespace: ${{ env.NAMESPACE }}
          manifests: |
            k8s/
